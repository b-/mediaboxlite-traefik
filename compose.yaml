---
networks:
  default:
    name: traefik
    driver: bridge
    attachable: true
services:
  traefik:
    restart: unless-stopped
    environment:
      CF_DNS_API_TOKEN: "${CF_DNS_API_TOKEN}"
    image: traefik:v3.3
    container_name: traefik
    command:
      # - --log.format=json
      - --log.level=INFO
      - --api.dashboard=true
      - --api.insecure=true
      - --api.debug=false
      - --entryPoints.web.address=:80
      - --entryPoints.web.asDefault=true
      - --entryPoints.websecure.address=:443
      - --entryPoints.websecure.asDefault=true
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=leresolver
      - --entrypoints.websecure.http.tls.domains[0].main=mediaboxlite.ibeep.com
      - --entrypoints.websecure.http.tls.domains[0].sans=*.mediaboxlite.ibeep.com,*.mediaboxlite.ts.ibeep.com,*.mediaboxlite.lan.ibeep.com,*.mediaboxlite.home.ibeep.com
      - --entryPoints.ssh.address=:222
      - --serversTransport.insecureSkipVerify=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --certificatesResolvers.leresolver.acme.email=letsencrypt@ibeep.com
      - --certificatesResolvers.leresolver.acme.storage=/certs/acme.json
      - --certificatesResolvers.leresolver.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
      #- --certificatesResolvers.leresolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # staging
      - --certificatesResolvers.leresolver.acme.dnsChallenge.provider=cloudflare
    ports:
      - 80:80
      - 8081:8080
      - 443:443
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - type: bind
        source: /var/run/docker.sock
        #source: /var/run/docker.sock:/var/run/docker.sock:ro
        target: /var/run/docker.sock
        read_only: true
      - certs:/certs
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
      traefik.enable: true
      traefik.http.routers.traefik.rule: HostRegexp(`^traefik\.mediaboxlite(?:\..*)*$`)
      traefik.http.services.traefik.loadbalancer.server.port: 8080
  whoami:
    image: traefik/whoami
    container_name: simple-service
    labels:
      traefik.enable: true
      traefik.http.routers.whoami.rule: HostRegexp(`^(?:whoami\.)?mediaboxlite(?:\..*)*$`)
      #traefik.http.routers.whoami.entrypoints: web
  upnp-service:
    image: ghcr.io/projectinitiative/upnp-service:latest
    network_mode: "host"
    #container_name: upnp-service
    restart: unless-stopped
    configs:
      - source: upnp
        target: /etc/upnp-service/upnp.json
volumes:
  certs:

configs:
  upnp:
    # /etc/upnp-service/upnp.json
    content: |
      {
          "apps":
          [
              {
                  "app_name": "traefik",
                  "redirections": [
                      ["443", "TCP"],
                      ["443", "UDP"],
                      ["80", "TCP"]
                  ]
              }
        ]
      }